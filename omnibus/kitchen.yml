#
# NOTE: this runs the omnibus cookbook, but does not actually run Omnibus. Use
# 'kichen converge' to setup the virtual machine and then `kitchen login` to
# SSH into the machine and run Omnibus.
#

driver:
  name: vagrant
  forward_agent: yes
  synced_folders:
    - ['..', '/home/vagrant/chef-workstation']
    - ['../../omnibus', '/home/vagrant/omnibus']
    - ['../../omnibus-software', '/home/vagrant/omnibus-software']
  customize:
    cpus: 6
    memory: 4096
    storagectl:
      - name: SATA Controller
        hostiocache: "on"

provisioner:
  name: chef_zero

# only run one of these at a time if you are interested in using the
# omnibus package produced; the build process begins by cleaning up
# prior built artifacts in pkg/ which is shared across VMs
platforms:
  - name: centos-7
  - name: debian-9
  - name: ubuntu-18.04
  - name: windows-2012r2-standard
    provisioner:
      attributes:
        omnibus:
          build_user_group: Administrators
    driver:
      box: tas50/windows_2012r2
      synced_folders:
      # We have to mount this repos enclosing folder as the Omnibus build
      # gets cranky if the mounted Chef Workstation source folder is a symlink. This
      # mounts at `C:\vagrant\code` and the Chef Workstation source folder is available
      # at `C:\vagrant\code\chef-workstation`
      - ['../..', '/vagrant/code']

suites:
  - name: default
    run_list: chef-workstation-builder::default
    attributes:
      omnibus:
        build_user:          vagrant
        build_user_group:    vagrant
        build_user_password: vagrant
        build_user_home:     /home/vagrant
        build_dir:           /home/vagrant/chef-workstation/omnibus
        install_dir:         /opt/chef-workstation
